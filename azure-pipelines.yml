# Build the surge-fx with JUCE buidls

trigger:
- master

pr:
- master

jobs:
- job: Build
  strategy:
    matrix:
      mac:
        imageName: 'macos-10.14'
        isMac: True
      win:
        imageName: 'vs2017-win2016'
        isWindows: True
      win32bit:
        imageName: 'vs2017-win2016'
        isWindows32: True
      linux:
        imageName: 'ubuntu-16.04'
        isLinux: True

  pool:
    vmImage: $(imageName)

  steps:
  - checkout: self
    fetchDepth: 1
    # submodules: recursive # can't do submodules here b'cuz depth=1 fails with Github


  - bash: |
      git submodule update --init --recursive
    displayName: Get Surge SubModule

  - bash: |
      make -f Makefile.mac dmg
      mkdir products/
      mv *dmg products
    displayName: Build Mac Plugins
    condition: variables.isMac

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'MACOS_BUILD'
      targetPath: 'products/'
    displayName: Publish Mac DMG
    condition: variables.isMac

  - bash: |
      mkdir assets
      mkdir products
      curl -o assets/juce-5.4.7-windows.zip https://d30pueezughrda.cloudfront.net/juce/juce-5.4.7-windows.zip   
      cd assets
      unzip juce-5.4.7-windows.zip
      cd ..
      assets/JUCE/Projucer.exe --resave surge-fx.jucer   
    displayName: Build Windows sln file
    condition: or(variables.isWindows, variables.isWindows32)

  - task: MSBuild@1
    inputs:
      solution: 'Builds\VisualStudio2017\SurgeEffectsBank.sln'
      maximumCpuCount: true
      platform: 'x64'
      configuration: 'Release'
    condition: variables.isWindows
    displayName: Build Windows x64

  - bash: |
      cd Builds/VisualStudio2017/x64
      mkdir assets
      mv Release/Standalone\ Plugin/SurgeEffectsBank.exe assets/
      mv Release/VST3/SurgeEffectsBank.vst3 assets/
      7z.exe a ../../../products/surge-effects-bank-win.zip assets 
    displayName: Build Windows Zip
    condition: variables.isWindows

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'WINDOWS_BUILD'
      targetPath: 'products/'
    displayName: Publish Windows Zip
    condition: variables.isWindows

  - task: MSBuild@1
    inputs:
      solution: 'Builds\VisualStudio2017\SurgeEffectsBank.sln'
      maximumCpuCount: true
      platform: 'Win32'
      configuration: 'ReleaseWin32'
    condition: variables.isWindows32
    displayName: Build Windows Win32

  - bash: |
      cd Builds/VisualStudio2017/Win32
      mkdir assets
      mv ReleaseWin32/Standalone\ Plugin/SurgeEffectsBank.exe assets/
      mv ReleaseWin32/VST3/SurgeEffectsBank.vst3 assets/
      7z.exe a ../../../products/surge-effects-bank-win-32.zip assets 
    displayName: Build Windows32 Zip
    condition: variables.isWindows32

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'WINDOWS32_BUILD'
      targetPath: 'products/'
    displayName: Publish Windows32 Zip
    condition: variables.isWindows32


  - bash: |
      # This is so close to working. But I don't find curl and I don't find freetype in incluldes.
      set -x
      suto apt-get update
      sudo apt-get install -y libwebkit2gtk-4.0
      sudo apt-get install -y libcurl4-openssl-dev
      sudo apt-get install -y alsa-base
      sudo apt-get install -y libasound2-dev
      sudo apt-get install -y jack
      sudo apt-get install -y libjack-dev
      sudo apt-get install -y libfreetype6-dev
      sudo apt-get install -y libgl1-mesa-dev

      # OK so what the heck is going on
      echo "===PKG CONFIGS==="
      pkg-config --cflags freetype2
      pkg-config --cflags libcurl
      ls -al /usr/include/freetype2
      
      Xvfb :9898 &
      export DISPLAY=:9898
      sleep 3 # give xvfb some time to start


      make -k -f Makefile.lin zip
    displayName: Build Linux Standalone
    condition: variables.isLinux

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'LINUX_BUILD'
      targetPath: 'products/'
    displayName: Publish Linux tgz
    condition: variables.isLinux


- job: UpdateGithubRelease
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  steps:
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: 'MACOS_BUILD'
      targetPath: $(Build.ArtifactStagingDirectory)

  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: 'WINDOWS_BUILD'
      targetPath: $(Build.ArtifactStagingDirectory)

  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: 'WINDOWS32_BUILD'
      targetPath: $(Build.ArtifactStagingDirectory)

  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: 'LINUX_BUILD'
      targetPath: $(Build.ArtifactStagingDirectory)

  - bash: |
     scripts/release-notes.sh > $(Build.ArtifactStagingDirectory)/ReleaseNotes.md
     ls $(Build.ArtifactStagingDirectory)
    displayName: Fake up release notes

  - task: GitHubRelease@0
    displayName: "Update Github Release"
    inputs:
      gitHubConnection: surge-rackupdater
      repositoryName: surge-synthesizer/surge-fx
      action: edit
      tag: Nightly
      target: '$(Build.SourceVersion)'
      addChangeLog: false
      releaseNotesFile: $(Build.ArtifactStagingDirectory)/ReleaseNotes.md
      assets: $(Build.ArtifactStagingDirectory)/*.*

